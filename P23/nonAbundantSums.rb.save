#! /usr/bin/ruby
require 'csv'
#get abundants array from csv file
def getAbundatns()

end

#return true if number is in array, false if not
def isInArray(n, arr)
	return arr.include? n
end

#return true if n cannot be sum of two abundant nums false if not
def nonSumAb(n, abs)
	#init smallAbs
	smallAbs = abs.reject {|x| x > n}
	#for evey ab in smallAbs
	for i in smallAbs
		#if it can be added to another abundant to get n
		if isInArray(n-i, smallAbs)
			#return value false
			return false	
		end
	end
	#if no abundants can be added to get n return true
	return true
end

#total all numbers under cap that cant be sum of two abundants
def totNonAbSums(cap)
	#init total
	total = 0
	#init abs
	abs = getAbundants()
	#for every number up to cap
	for i in abs
		#if i is not a sum of abundants
		if nonSumAb(i, abs)
			#add i to total
			total += i
		end
	end
	#return total
	return total
end

puts totNonAbSums(28123)
